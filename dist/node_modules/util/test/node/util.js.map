{"version":3,"sources":["../../../../../node_modules/util/test/node/util.js"],"names":["assert","require","context","runInNewContext","util","equal","isArray","Array","push","Error","Object","create","prototype","isRegExp","RegExp","Date","isDate","isError","TypeError","SyntaxError","name","message","ok","isObject","deepEqual","_extend","a","b"],"mappings":"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","file":"util.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar assert = require('assert');\nvar context = require('vm').runInNewContext;\n\nvar util = require('../../');\n\n// isArray\nassert.equal(true, util.isArray([]));\nassert.equal(true, util.isArray(Array()));\nassert.equal(true, util.isArray(new Array()));\nassert.equal(true, util.isArray(new Array(5)));\nassert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\nassert.equal(true, util.isArray(context('Array')()));\nassert.equal(false, util.isArray({}));\nassert.equal(false, util.isArray({ push: function() {} }));\nassert.equal(false, util.isArray(/regexp/));\nassert.equal(false, util.isArray(new Error));\nassert.equal(false, util.isArray(Object.create(Array.prototype)));\n\n// isRegExp\nassert.equal(true, util.isRegExp(/regexp/));\nassert.equal(true, util.isRegExp(RegExp()));\nassert.equal(true, util.isRegExp(new RegExp()));\nassert.equal(true, util.isRegExp(context('RegExp')()));\nassert.equal(false, util.isRegExp({}));\nassert.equal(false, util.isRegExp([]));\nassert.equal(false, util.isRegExp(new Date()));\nassert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n\n// isDate\nassert.equal(true, util.isDate(new Date()));\nassert.equal(true, util.isDate(new Date(0)));\nassert.equal(true, util.isDate(new (context('Date'))));\nassert.equal(false, util.isDate(Date()));\nassert.equal(false, util.isDate({}));\nassert.equal(false, util.isDate([]));\nassert.equal(false, util.isDate(new Error));\nassert.equal(false, util.isDate(Object.create(Date.prototype)));\n\n// isError\nassert.equal(true, util.isError(new Error));\nassert.equal(true, util.isError(new TypeError));\nassert.equal(true, util.isError(new SyntaxError));\nassert.equal(true, util.isError(new (context('Error'))));\nassert.equal(true, util.isError(new (context('TypeError'))));\nassert.equal(true, util.isError(new (context('SyntaxError'))));\nassert.equal(false, util.isError({}));\nassert.equal(false, util.isError({ name: 'Error', message: '' }));\nassert.equal(false, util.isError([]));\nassert.equal(true, util.isError(Object.create(Error.prototype)));\n\n// isObject\nassert.ok(util.isObject({}) === true);\n\n// _extend\nassert.deepEqual(util._extend({a:1}),             {a:1});\nassert.deepEqual(util._extend({a:1}, []),         {a:1});\nassert.deepEqual(util._extend({a:1}, null),       {a:1});\nassert.deepEqual(util._extend({a:1}, true),       {a:1});\nassert.deepEqual(util._extend({a:1}, false),      {a:1});\nassert.deepEqual(util._extend({a:1}, {b:2}),      {a:1, b:2});\nassert.deepEqual(util._extend({a:1, b:2}, {b:3}), {a:1, b:3});\n"]}