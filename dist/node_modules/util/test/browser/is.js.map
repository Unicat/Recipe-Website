{"version":3,"sources":["../../../../../node_modules/util/test/browser/is.js"],"names":["assert","require","util","suite","test","equal","isArray","Array","push","Error","Object","create","prototype","isRegExp","RegExp","Date","isDate","isError","TypeError","SyntaxError","name","message","deepEqual","_extend","a","b","isBuffer","Buffer"],"mappings":"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","file":"is.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\n\nvar util = require('../../');\n\nsuite('is');\n\ntest('util.isArray', function () {\n  assert.equal(true, util.isArray([]));\n  assert.equal(true, util.isArray(Array()));\n  assert.equal(true, util.isArray(new Array()));\n  assert.equal(true, util.isArray(new Array(5)));\n  assert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\n  assert.equal(false, util.isArray({}));\n  assert.equal(false, util.isArray({ push: function() {} }));\n  assert.equal(false, util.isArray(/regexp/));\n  assert.equal(false, util.isArray(new Error()));\n  assert.equal(false, util.isArray(Object.create(Array.prototype)));\n});\n\ntest('util.isRegExp', function () {\n  assert.equal(true, util.isRegExp(/regexp/));\n  assert.equal(true, util.isRegExp(RegExp()));\n  assert.equal(true, util.isRegExp(new RegExp()));\n  assert.equal(false, util.isRegExp({}));\n  assert.equal(false, util.isRegExp([]));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n});\n\ntest('util.isDate', function () {\n  assert.equal(true, util.isDate(new Date()));\n  assert.equal(true, util.isDate(new Date(0)));\n  assert.equal(false, util.isDate(Date()));\n  assert.equal(false, util.isDate({}));\n  assert.equal(false, util.isDate([]));\n  assert.equal(false, util.isDate(new Error()));\n  assert.equal(false, util.isDate(Object.create(Date.prototype)));\n});\n\ntest('util.isError', function () {\n  assert.equal(true, util.isError(new Error()));\n  assert.equal(true, util.isError(new TypeError()));\n  assert.equal(true, util.isError(new SyntaxError()));\n  assert.equal(false, util.isError({}));\n  assert.equal(false, util.isError({ name: 'Error', message: '' }));\n  assert.equal(false, util.isError([]));\n  assert.equal(true, util.isError(Object.create(Error.prototype)));\n});\n\ntest('util._extend', function () {\n  assert.deepEqual(util._extend({a:1}),             {a:1});\n  assert.deepEqual(util._extend({a:1}, []),         {a:1});\n  assert.deepEqual(util._extend({a:1}, null),       {a:1});\n  assert.deepEqual(util._extend({a:1}, true),       {a:1});\n  assert.deepEqual(util._extend({a:1}, false),      {a:1});\n  assert.deepEqual(util._extend({a:1}, {b:2}),      {a:1, b:2});\n  assert.deepEqual(util._extend({a:1, b:2}, {b:3}), {a:1, b:3});\n});\n\ntest('util.isBuffer', function () {\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer([1, 2, 3, 4])));\n  assert.equal(false, util.isBuffer({}));\n  assert.equal(false, util.isBuffer([]));\n  assert.equal(false, util.isBuffer(new Error()));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(true, util.isBuffer(Object.create(Buffer.prototype)));\n});\n"]}