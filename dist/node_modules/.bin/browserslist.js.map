{"version":3,"sources":["../../../node_modules/.bin/browserslist"],"names":["browserslist","require","pkg","args","process","argv","slice","isArg","arg","some","str","indexOf","getArgValue","found","filter","value","split","replace","error","msg","stderr","write","name","exit","query","queries","opts","e","message","length","stdout","description","join","version","browsers","find","i","country","result","coverage","round","Math","end","toUpperCase","forEach","browser","config","env","stats"],"mappings":"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","file":"browserslist.js","sourcesContent":["\n\nvar browserslist = require('./');\nvar pkg          = require('./package.json');\nvar args         = process.argv.slice(2);\n\nfunction isArg(arg) {\n    return args.some(function (str) {\n        return str === arg || str.indexOf(arg + '=') === 0;\n    });\n}\n\nfunction getArgValue(arg) {\n    var found = args.filter(function (str) {\n        return str.indexOf(arg + '=') === 0;\n    })[0];\n    var value = found && found.split('=')[1];\n    return value && value.replace(/^['\"]|['\"]$/g, '');\n}\n\nfunction error(msg) {\n    process.stderr.write(pkg.name + ': ' + msg + '\\n');\n    process.exit(1);\n}\n\nfunction query(queries, opts) {\n    try {\n        return browserslist(queries, opts);\n    } catch (e) {\n        if ( e.name === 'BrowserslistError' ) {\n            return error(e.message);\n        } else {\n            throw e;\n        }\n    }\n}\n\nif ( args.length === 0 || isArg('--help') || isArg('-h') ) {\n    process.stdout.write([\n        pkg.description,\n        '',\n        'Usage:',\n        '  ' + pkg.name + ' \"QUERIES\"',\n        '  ' + pkg.name + ' --coverage \"QUERIES\"',\n        '  ' + pkg.name + ' --coverage=US \"QUERIES\"',\n        '  ' + pkg.name + ' --config=browserslist \"path/to/browserlist/file\"',\n        '  ' + pkg.name + ' --env=\"environment name defined in config\"',\n        '  ' + pkg.name + ' --stats=\"path/to/browserlist/stats/file\"'\n    ].join('\\n') + '\\n');\n\n} else if ( isArg('--version') || isArg('-v') ) {\n    process.stdout.write(pkg.name + ' ' + pkg.version + '\\n');\n\n} else if ( isArg('--coverage') || isArg('-c') ) {\n    var browsers = args.find(function (i) {\n        return i[0] !== '-';\n    });\n    if ( !browsers ) error('Define a browsers query to get coverage');\n\n    var country = getArgValue('--coverage') || getArgValue('-c');\n    var result  = browserslist.coverage(query(browsers), country);\n    var round   = Math.round(result * 100) / 100.0;\n\n    var end = 'globally';\n    if (country && country !== 'global') {\n        end = 'in the ' + country.toUpperCase();\n    }\n\n    process.stdout.write(\n        'These browsers account for ' + round + '% of all users ' + end + '\\n');\n\n} else if ( args.length === 1 && args[0][0] !== '-' ) {\n    query(args[0]).forEach(function (browser) {\n        process.stdout.write(browser + '\\n');\n    });\n\n} else if (isArg('--config') || isArg('-b')) {\n    var opts = {\n        config: getArgValue('--config') || getArgValue('-b')\n    };\n\n    if (isArg('--env') || isArg('-e')) {\n        opts.env = getArgValue('--env') || getArgValue('-e');\n    }\n\n    if (isArg('--stats') || isArg('-s')) {\n        opts.stats = getArgValue('--stats') || getArgValue('-s');\n    }\n\n    query(null, opts).forEach(function (browser) {\n        process.stdout.write(browser + '\\n');\n    });\n} else {\n    error('Unknown arguments. Use --help to pick right one.');\n}\n"]}