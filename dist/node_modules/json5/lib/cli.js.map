{"version":3,"sources":["../../../../node_modules/json5/lib/cli.js"],"names":["FS","require","JSON5","Path","USAGE","join","args","process","argv","length","console","error","exit","cwd","files","slice","forEach","file","path","resolve","basename","dirname","json5","readFileSync","obj","parse","json","JSON","stringify","writeFileSync"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,QAAQD,QAAQ,SAAR,CAAZ;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;;AAEA,IAAIG,QAAQ,CACR,wCADQ,EAER,uEAFQ,EAGVC,IAHU,CAGL,IAHK,CAAZ;;AAKA;AACA,IAAIC,OAAOC,QAAQC,IAAnB;;AAEA,IAAIF,KAAKG,MAAL,GAAc,CAAd,IAAmBH,KAAK,CAAL,MAAY,IAAnC,EAAyC;AACrCI,YAAQC,KAAR,CAAcP,KAAd;AACAG,YAAQK,IAAR,CAAa,CAAb;AACH;;AAED,IAAIC,MAAMN,QAAQM,GAAR,EAAV;AACA,IAAIC,QAAQR,KAAKS,KAAL,CAAW,CAAX,CAAZ;;AAEA;AACAD,MAAME,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B,QAAIC,OAAOf,KAAKgB,OAAL,CAAaN,GAAb,EAAkBI,IAAlB,CAAX;AACA,QAAIG,WAAWjB,KAAKiB,QAAL,CAAcF,IAAd,EAAoB,QAApB,CAAf;AACA,QAAIG,UAAUlB,KAAKkB,OAAL,CAAaH,IAAb,CAAd;;AAEA,QAAII,QAAQtB,GAAGuB,YAAH,CAAgBL,IAAhB,EAAsB,MAAtB,CAAZ;AACA,QAAIM,MAAMtB,MAAMuB,KAAN,CAAYH,KAAZ,CAAV;AACA,QAAII,OAAOC,KAAKC,SAAL,CAAeJ,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAX,CAP0B,CAOe;;AAEzCN,WAAOf,KAAKE,IAAL,CAAUgB,OAAV,EAAmBD,WAAW,OAA9B,CAAP;AACApB,OAAG6B,aAAH,CAAiBX,IAAjB,EAAuBQ,IAAvB,EAA6B,MAA7B;AACH,CAXD","file":"cli.js","sourcesContent":["\n\n// cli.js\n// JSON5 command-line interface.\n//\n// This is pretty minimal for now; just supports compiling files via `-c`.\n// TODO More useful functionality, like output path, watch, etc.?\n\nvar FS = require('fs');\nvar JSON5 = require('./json5');\nvar Path = require('path');\n\nvar USAGE = [\n    'Usage: json5 -c path/to/file.json5 ...',\n    'Compiles JSON5 files into sibling JSON files with the same basenames.',\n].join('\\n');\n\n// if valid, args look like [node, json5, -c, file1, file2, ...]\nvar args = process.argv;\n\nif (args.length < 4 || args[2] !== '-c') {\n    console.error(USAGE);\n    process.exit(1);\n}\n\nvar cwd = process.cwd();\nvar files = args.slice(3);\n\n// iterate over each file and convert JSON5 files to JSON:\nfiles.forEach(function (file) {\n    var path = Path.resolve(cwd, file);\n    var basename = Path.basename(path, '.json5');\n    var dirname = Path.dirname(path);\n\n    var json5 = FS.readFileSync(path, 'utf8');\n    var obj = JSON5.parse(json5);\n    var json = JSON.stringify(obj, null, 4); // 4 spaces; TODO configurable?\n\n    path = Path.join(dirname, basename + '.json');\n    FS.writeFileSync(path, json, 'utf8');\n});\n"]}