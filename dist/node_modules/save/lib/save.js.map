{"version":3,"sources":["../../../../node_modules/save/lib/save.js"],"names":["extend","require","module","exports","name","opts","engine","defaults","idProperty","logger","info","console","verbose","undefined","debug","options","Error","on","object","JSON","stringify","overwrite","query","id","queryOptions","error"],"mappings":"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","file":"save.js","sourcesContent":["var extend = require('lodash.assign')\n\nmodule.exports = function (name, opts) {\n\n  var engine\n    , defaults =\n      { idProperty: '_id'\n      , logger: { info: console.info, verbose: console.info }\n      , engine: undefined\n      , debug: true\n      }\n    , options = extend({}, defaults, opts)\n\n  if (typeof name !== 'string') {\n    throw new Error('A string must be provided for \\'name\\'')\n  }\n\n  // If no engine is passed then default to the memory engine.\n  engine = options.engine || require('./memory-engine')(\n    { idProperty: options.idProperty })\n\n  // Only log in debug mode\n  if (options.debug) {\n\n    engine.on('create', function (object) {\n      options.logger.info('Creating \\'' + name + '\\'', JSON.stringify(object))\n    })\n\n    engine.on('update', function (object, overwrite) {\n      options.logger.info('Updating \\'' + name + '\\'', JSON.stringify(object)\n        , ' with overwrite ', overwrite)\n    })\n\n    engine.on('updateMany', function (query) {\n      options.logger.info('Updating many \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('delete', function (id) {\n      options.logger.info('Deleting \\'' + name + '\\'', id)\n    })\n\n    engine.on('deleteMany', function (query) {\n      options.logger.info('Deleting many \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('read', function (id) {\n      options.logger.info('Reading \\'' + name + '\\'', id)\n    })\n\n    engine.on('find', function (query, queryOptions) {\n      options.logger.info('Finding \\'' + name + '\\'', JSON.stringify(query) , JSON.stringify(queryOptions))\n    })\n\n    engine.on('findOne', function (query, queryOptions) {\n      options.logger.info('Finding One \\'' + name + '\\'', JSON.stringify(query) , JSON.stringify(queryOptions))\n    })\n\n    engine.on('count', function (query) {\n      options.logger.info('Count \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('error', function (error) {\n      options.logger.error('Error with \\'' + name + '\\'', error)\n    })\n  }\n\n  return engine\n}\n"]}