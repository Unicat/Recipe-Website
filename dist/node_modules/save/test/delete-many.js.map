{"version":3,"sources":["../../../../node_modules/save/test/delete-many.js"],"names":["async","require","should","module","exports","idProperty","getEngine","describe","it","done","error","engine","objectToDelete","a","map","b","create","deleteMany","not","exist","find","objects","length","equal","forEach","object","insertedObject","on","entity","eql"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AAAA,IACIC,SAASD,QAAQ,QAAR,CADb;;AAGAE,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqBC,SAArB,EAAgC;;AAE/CC,WAAS,eAAT,EAA0B,YAAY;;AAEpCC,OAAG,sDAAH,EAA2D,UAAUC,IAAV,EAAgB;AACzEH,gBAAU,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACjC,YAAIC,iBAAiB,EAAEC,GAAG,CAAL,EAArB;AACAb,cAAMc,GAAN,CAAU,CAAEF,cAAF,EAAkBA,cAAlB,EAAkC,EAAEC,GAAG,CAAL,EAAlC,EAA4C,EAAEE,GAAG,CAAL,EAA5C,CAAV,EAAkEJ,OAAOK,MAAzE,EAAiF,YAAY;AAC3FL,iBAAOM,UAAP,CAAkBL,cAAlB,EAAkC,UAAUF,KAAV,EAAiB;AACjDR,mBAAOgB,GAAP,CAAWC,KAAX,CAAiBT,KAAjB;;AAEAC,mBAAOS,IAAP,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,UAAUV,KAAV,EAAiBW,OAAjB,EAA0B;;AAE5C;AACAA,sBAAQC,MAAR,CAAepB,MAAf,CAAsBqB,KAAtB,CAA4B,CAA5B;;AAEA;AACAF,sBAAQG,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChCA,uBAAOvB,MAAP,CAAcgB,GAAd,CAAkBK,KAAlB,CAAwBX,cAAxB;AACD,eAFD;AAGAH;AACD,aAVD;AAWD,WAdD;AAeD,SAhBD;AAiBD,OAnBD;AAoBD,KArBD;;AAuBAD,OAAG,oCAAH,EAAyC,UAAUC,IAAV,EAAgB;AACvDH,gBAAU,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACjCA,eAAOK,MAAP,CAAc,EAAEH,GAAG,CAAL,EAAd,EAAwB,UAAUH,KAAV,EAAiBgB,cAAjB,EAAiC;AACvDf,iBAAOgB,EAAP,CAAU,YAAV,EAAwB,UAAUC,MAAV,EAAkB;AACxCA,mBAAO1B,MAAP,CAAc2B,GAAd,CAAkBH,cAAlB;AACAjB;AACD,WAHD;AAIAE,iBAAOM,UAAP,CAAkBS,cAAlB;AACD,SAND;AAOD,OARD;AASD,KAVD;;AAYAlB,OAAG,yCAAH,EAA8C,UAAUC,IAAV,EAAgB;AAC5DH,gBAAU,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACjCA,eAAOK,MAAP,CAAc,EAAEH,GAAG,CAAL,EAAd,EAAwB,UAAUH,KAAV,EAAiBgB,cAAjB,EAAiC;AACvDf,iBAAOgB,EAAP,CAAU,iBAAV,EAA6B,UAAUC,MAAV,EAAkB;AAC7CA,mBAAO1B,MAAP,CAAc2B,GAAd,CAAkBH,cAAlB;AACAjB;AACD,WAHD;AAIAE,iBAAOM,UAAP,CAAkBS,cAAlB;AACD,SAND;AAOD,OARD;AASD,KAVD;;AAYAlB,OAAG,oDAAH,EAAyD,UAAUC,IAAV,EAAgB;AACvEH,gBAAU,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACjCX,cAAMc,GAAN,CAAU,CAAE,EAAED,GAAG,CAAL,EAAF,EAAY,EAAEA,GAAG,CAAL,EAAZ,EAAsB,EAAEA,GAAG,CAAL,EAAtB,EAAgC,EAAEA,GAAG,CAAL,EAAhC,CAAV,EAAsDF,OAAOK,MAA7D,EAAqE,YAAY;AAC/EL,iBAAOM,UAAP,CAAkB,EAAEJ,GAAG,CAAL,EAAlB,EAA4B,UAAUH,KAAV,EAAiB;AAC3CR,mBAAOgB,GAAP,CAAWC,KAAX,CAAiBT,KAAjB;AACAD;AACD,WAHD;AAID,SALD;AAMD,OAPD;AAQD,KATD;AAWD,GA5DD;AA6DD,CA/DD","file":"delete-many.js","sourcesContent":["var async = require('async')\n  , should = require('should')\n\nmodule.exports = function(idProperty, getEngine) {\n\n  describe('#deleteMany()', function () {\n\n    it('should delete the entity if the delete query matches', function (done) {\n      getEngine(function (error, engine) {\n        var objectToDelete = { a: 1 }\n        async.map([ objectToDelete, objectToDelete, { a: 2 }, { b: 1 } ], engine.create, function () {\n          engine.deleteMany(objectToDelete, function (error) {\n            should.not.exist(error)\n\n            engine.find({}, {}, function (error, objects) {\n\n              // Assert items have been deleted\n              objects.length.should.equal(2)\n\n              // Assert items returned arent deleted ones\n              objects.forEach(function (object) {\n                object.should.not.equal(objectToDelete)\n              })\n              done()\n            })\n          })\n        })\n      })\n    })\n\n    it('should emit a \\'deleteMany\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.create({ a: 1 }, function (error, insertedObject) {\n          engine.on('deleteMany', function (entity) {\n            entity.should.eql(insertedObject)\n            done()\n          })\n          engine.deleteMany(insertedObject)\n        })\n      })\n    })\n\n    it('should emit a \\'afterDeleteMany\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.create({ a: 1 }, function (error, insertedObject) {\n          engine.on('afterDeleteMany', function (entity) {\n            entity.should.eql(insertedObject)\n            done()\n          })\n          engine.deleteMany(insertedObject)\n        })\n      })\n    })\n\n    it('should not error if there are no objects to delete', function (done) {\n      getEngine(function (error, engine) {\n        async.map([ { a: 1 }, { a: 2 }, { a: 3 }, { a: 4 } ], engine.create, function () {\n          engine.deleteMany({ a: 5 }, function (error) {\n            should.not.exist(error)\n            done()\n          })\n        })\n      })\n    })\n\n  })\n}\n"]}