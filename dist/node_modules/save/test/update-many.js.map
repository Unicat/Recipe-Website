{"version":3,"sources":["../../../../node_modules/save/test/update-many.js"],"names":["async","require","should","module","exports","idProperty","getEngine","describe","it","skip","done","error","engine","objectToUpdate","a","map","b","create","not","exist","updateMany","c","find","items","include","length","equal"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AAAA,IACIC,SAASD,QAAQ,QAAR,CADb;;AAGAE,OAAOC,OAAP,GAAiB,UAASC,UAAT,EAAqBC,SAArB,EAAgC;;AAE/CC,WAAS,eAAT,EAA0B,YAAY;;AAEpCC,OAAGC,IAAH,CAAQ,oBAAR,EAA8B,UAAUC,IAAV,EAAgB;;AAE5CJ,gBAAU,UAAUK,KAAV,EAAiBC,MAAjB,EAAyB;AACjC,YAAIC,iBAAiB,EAAEC,GAAG,CAAL,EAArB;AACAd,cAAMe,GAAN,CAAU,CAAGF,cAAH,EAAmBA,cAAnB,EAAmC,EAAEC,GAAG,CAAL,EAAnC,EAA6C,EAAEE,GAAG,CAAL,EAA7C,CAAV,EAAmEJ,OAAOK,MAA1E,EAAkF,UAAUN,KAAV,EAAiB;AACjGT,iBAAOgB,GAAP,CAAWC,KAAX,CAAiBR,KAAjB;AACAC,iBAAOQ,UAAP,CAAkB,EAAEN,GAAG,CAAL,EAAlB,EAA6B,EAAEO,GAAG,CAAL,EAA7B,EAAuC,UAAUV,KAAV,EAAiB;AACtDT,mBAAOgB,GAAP,CAAWC,KAAX,CAAiBR,KAAjB;AACAC,mBAAOU,IAAP,CAAY,EAAER,GAAG,CAAL,EAAZ,EAAsB,UAAUH,KAAV,EAAiBY,KAAjB,EAAwB;AAC5CA,oBAAM,CAAN,EAASrB,MAAT,CAAgBsB,OAAhB,CAAwB,EAAEV,GAAG,CAAL,EAAQO,GAAG,CAAX,EAAxB;AACAE,oBAAM,CAAN,EAASrB,MAAT,CAAgBsB,OAAhB,CAAwB,EAAEV,GAAG,CAAL,EAAQO,GAAG,CAAX,EAAxB;AACAE,oBAAME,MAAN,CAAavB,MAAb,CAAoBwB,KAApB,CAA0B,CAA1B;AACAhB;AACD,aALD;AAMD,WARD;AASD,SAXD;AAYD,OAdD;AAeD,KAjBD;AAkBD,GApBD;AAsBD,CAxBD","file":"update-many.js","sourcesContent":["var async = require('async')\n  , should = require('should')\n\nmodule.exports = function(idProperty, getEngine) {\n\n  describe('#updateMany()', function () {\n\n    it.skip('should update many', function (done) {\n\n      getEngine(function (error, engine) {\n        var objectToUpdate = { a: 1 }\n        async.map([  objectToUpdate, objectToUpdate, { a: 2 }, { b: 1 } ], engine.create, function (error) {\n          should.not.exist(error)\n          engine.updateMany({ a: 1 } , { c: 3 }, function (error) {\n            should.not.exist(error)\n            engine.find({ a: 1 }, function (error, items) {\n              items[0].should.include({ a: 1, c: 3 })\n              items[1].should.include({ a: 1, c: 3 })\n              items.length.should.equal(2)\n              done()\n            })\n          })\n        })\n      })\n    })\n  })\n\n}\n"]}