{"version":3,"sources":["../../../../node_modules/save/test/read.js"],"names":["assert","require","module","exports","idProperty","getEngine","describe","it","done","error","engine","read","entity","equal","undefined","on","id","original","a","create","data","deepEqual","should","be","type","newProperty","not","have","property"],"mappings":"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","file":"read.js","sourcesContent":["var assert = require('assert')\n\nmodule.exports = function(idProperty, getEngine) {\n\n  describe('#read()', function () {\n\n    it('should return undefined if no object is found with given id', function (done) {\n\n      getEngine(function (error, engine) {\n        engine.read('999', function (error, entity) {\n          assert.equal(undefined, entity)\n          done()\n        })\n      })\n    })\n\n    it('should emit a \\'read\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.on('read', function (id) {\n          assert.equal(id, '999')\n          done()\n        })\n        engine.read('999', function () {\n        })\n      })\n    })\n\n    it('should return object if id is found', function (done) {\n\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n\n          engine.read(entity[idProperty], function (error, entity) {\n            assert.equal(entity, entity)\n            done()\n          })\n        })\n      })\n    })\n\n    it('should emit a received event', function (done) {\n\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n          engine.on('received', function (data) {\n            assert.deepEqual(data, entity)\n            done()\n          })\n          engine.read(entity[idProperty], function (error, entity) {\n            assert.deepEqual(entity, entity)\n          })\n        })\n      })\n    })\n\n    it('should return id of type String', function (done) {\n\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n\n          engine.read(entity[idProperty], function (error, entity) {\n\n            entity[idProperty].should.be.type('string')\n\n            done()\n          })\n        })\n      })\n    })\n\n    it('should return a clone of the object', function (done) {\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n\n          engine.read(entity[idProperty], function (error, entity) {\n\n            entity.newProperty = true\n            original.should.not.have.property('newProperty')\n\n            done()\n          })\n        })\n      })\n    })\n\n  })\n\n}\n"]}