{"version":3,"sources":["../../../../node_modules/save/test/create.js"],"names":["_","require","async","should","module","exports","idProperty","getEngine","describe","it","done","error","engine","create","a","entity","have","property","testObject","b","eql","on","_id","fixtures","map","objects","not","exist","forEach","object","strictEqual","n","c","ids","cb","uniq","push","item","i","original","be","type","equal","checkFalsy","falsy","notEqual","undefined","NaN","find","data","dataClone","clone","read"],"mappings":"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","file":"create.js","sourcesContent":["var _ = require('lodash')\n  , async = require('async')\n  , should = require('should')\n\nmodule.exports = function(idProperty, getEngine) {\n\n  describe('#create()', function () {\n\n    it('should return the inserted entity with a new id', function (done) {\n      getEngine(function (error, engine) {\n        engine.create({ a: 1 }, function (error, entity) {\n          entity.should.have.property(idProperty)\n          done()\n        })\n      })\n    })\n\n    it('should correctly insert an entity with a nested object', function (done) {\n\n      var testObject = { a: 1, b: { a: 2, b: 2 } }\n\n      getEngine(function (error, engine) {\n        engine.create(testObject, function (error, entity) {\n          entity.b.should.have.property('a')\n          entity.b.a.should.eql(2)\n          done()\n        })\n      })\n    })\n\n    it('should emit a \\'create\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.on('create', function (entity) {\n          entity.should.eql({ a: 1 })\n          done()\n        })\n        engine.create({ a: 1 })\n      })\n    })\n\n    it('should emit a \\'afterCreate\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.on('afterCreate', function (entity) {\n\n          entity.should.eql({ _id: '1' })\n          done()\n        })\n        engine.create({ _id: 1 })\n      })\n    })\n\n    it('unique id should always be a string', function (done) {\n\n      getEngine(function (error, engine) {\n\n        var fixtures =\n            [ { a: 1 }\n            , { _id: 6, a: 1 }\n            , { _id: '7', a: 1 }\n            ]\n\n        async.map(fixtures, engine.create, function (error, objects) {\n\n          should.not.exist(error)\n\n          _.forEach(objects, function(object) {\n            object.should.have.property(idProperty)\n            should.strictEqual((typeof object[idProperty]), 'string')\n          })\n\n          done()\n        })\n      })\n    })\n\n    it('should always create a unique id', function (done) {\n\n      var n = 15\n        , c = 1\n        , ids = []\n\n      function cb(error, entity) {\n        should.not.exist(error)\n        if (c >= n) {\n          _.uniq(ids).should.eql(ids)\n          done()\n\n        } else {\n          should.exist(entity[idProperty])\n          ids.push(entity[idProperty])\n        }\n\n        c += 1\n      }\n\n      getEngine(function (error, engine) {\n        var item = { a: 1 }\n        for (var i = 0; i < n; i += 1) {\n          engine.create(item, cb)\n        }\n      })\n\n    })\n\n    it('should return the same object besides the id', function (done) {\n\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n\n          delete entity[idProperty]\n\n          original.should.eql(entity)\n\n          done()\n        })\n      })\n    })\n\n    it('should retrieve ids as strings', function (done) {\n\n      var original = { a: 1 }\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n\n          entity[idProperty].should.be.type('string')\n\n          done()\n        })\n      })\n    })\n\n    it('should allow idProperty to be defined', function (done) {\n\n      var original = {  a: 1 }\n      original[idProperty] = '0'\n\n      getEngine(function (error, engine) {\n        engine.create(original, function (error, entity) {\n          should.not.exist(error)\n          entity._id.should.equal('0')\n          done()\n        })\n      })\n    })\n\n    it('should not count falsy values as being a defined id', function (done) {\n\n      function checkFalsy(falsy, cb) {\n        var original = {}\n        original[idProperty] = falsy\n\n        getEngine(function (error, engine) {\n          should.not.exist(error)\n          engine.create(original, function (error, entity) {\n            should.notEqual(entity[idProperty], falsy)\n            cb()\n          })\n        })\n      }\n\n      async.forEach([ null, undefined, '', false, 0, NaN ], checkFalsy, done)\n    })\n\n    it('should not retain reference to original object', function (done) {\n\n      var item = { a: 1 }\n\n      getEngine(function (error, engine) {\n        async.map([ item, item ], engine.create, function (error) {\n          should.not.exist(error)\n          engine.find({}, {}, function (error, objects) {\n            objects[0].a = 2\n            objects[1].a.should.equal(1)\n            done()\n          })\n        })\n      })\n    })\n\n    it('should return a new object', function () {\n      var data = { a: 1 }\n    , dataClone = _.clone(data)\n    , engine = require('../lib/memory-engine')()\n\n      engine.create(data, function (error, object) {\n\n        delete object.a\n\n        object.should.not.eql(dataClone)\n        data.should.have.property('a')\n\n        engine.read(object._id, function (error, item) {\n          item.should.have.property('a')\n          item.should.have.property('_id')\n        })\n      })\n    })\n  })\n}\n"]}