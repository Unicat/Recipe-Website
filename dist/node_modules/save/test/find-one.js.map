{"version":3,"sources":["../../../../node_modules/save/test/find-one.js"],"names":["async","require","should","module","exports","idProperty","getEngine","describe","it","done","error","engine","findOne","a","object","not","exist","on","entity","eql","map","create","be","type","newObject","newProperty","have","property","equal","sort"],"mappings":"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","file":"find-one.js","sourcesContent":["var async = require('async')\n  , should = require('should')\n\nmodule.exports = function(idProperty, getEngine) {\n\n  describe('#findOne()', function () {\n\n    it('should return undefined when no data matches query ', function (done) {\n\n      getEngine(function (error, engine) {\n        engine.findOne({ a: 1 }, function (error, object) {\n          should.not.exist(object)\n          done()\n        })\n      })\n    })\n\n    it('should emit a \\'findOne\\' event', function (done) {\n      getEngine(function (error, engine) {\n        engine.on('findOne', function (entity) {\n          entity.should.eql({ a: 1 })\n          done()\n        })\n\n        engine.findOne({ a: 1 }, function () {\n        })\n\n      })\n    })\n\n    it('should return id of type string', function (done) {\n      getEngine(function (error, engine) {\n        async.map([ { a: 3 } ], engine.create, function () {\n          engine.findOne({}, function (error, object) {\n            object[idProperty].should.be.type('string')\n            done()\n          })\n        })\n      })\n    })\n\n    it('should return a clone of the object', function (done) {\n      var object = { a: 3 }\n      getEngine(function (error, engine) {\n        async.map([ object ], engine.create, function () {\n          engine.findOne({}, function (error, newObject) {\n            newObject.newProperty = true\n            object.should.not.have.property('newProperty')\n            done()\n          })\n        })\n      })\n    })\n\n    it('should return an object for a single clause query that matches an existing object ', function (done) {\n      getEngine(function (error, engine) {\n        async.map([ { a: 1 } ], engine.create, function () {\n          engine.findOne({ a: 1 }, function (error, object) {\n            object.a.should.equal(1)\n            done()\n          })\n        })\n      })\n    })\n\n    it('should use options to shape results', function (done) {\n      getEngine(function (error, engine) {\n        async.map([ { a: 3 }, { a: 1 }, { a: 2 } ], engine.create, function () {\n          engine.findOne({}, { sort: { a: 1 } }, function (error, object) {\n            object.a.should.equal(1)\n            done()\n          })\n        })\n      })\n    })\n  })\n}\n"]}