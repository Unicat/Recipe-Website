{"version":3,"sources":["../../../node_modules/split/index.js"],"names":["through","require","Decoder","StringDecoder","module","exports","split","matcher","mapper","options","decoder","soFar","maxLength","emit","stream","piece","err","queue","next","buffer","pieces","pop","length","Error","i","b","write","end"],"mappings":";;AAAA;;AAEA;AACA;AACA;;;AAGA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,gBAAR,EAA0BE,aAAxC;;AAEAC,OAAOC,OAAP,GAAiBC,KAAjB;;AAEA;;AAEA,SAASA,KAAT,CAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0C;AACxC,MAAIC,UAAU,IAAIR,OAAJ,EAAd;AACA,MAAIS,QAAQ,EAAZ;AACA,MAAIC,YAAYH,WAAWA,QAAQG,SAAnC;AACA,MAAG,eAAe,OAAOL,OAAzB,EACEC,SAASD,OAAT,EAAkBA,UAAU,IAA5B;AACF,MAAI,CAACA,OAAL,EACEA,UAAU,OAAV;;AAEF,WAASM,IAAT,CAAcC,MAAd,EAAsBC,KAAtB,EAA6B;AAC3B,QAAGP,MAAH,EAAW;AACT,UAAI;AACFO,gBAAQP,OAAOO,KAAP,CAAR;AACD,OAFD,CAGA,OAAOC,GAAP,EAAY;AACV,eAAOF,OAAOD,IAAP,CAAY,OAAZ,EAAqBG,GAArB,CAAP;AACD;AACD,UAAG,gBAAgB,OAAOD,KAA1B,EACED,OAAOG,KAAP,CAAaF,KAAb;AACH,KATD,MAWED,OAAOG,KAAP,CAAaF,KAAb;AACH;;AAED,WAASG,IAAT,CAAeJ,MAAf,EAAuBK,MAAvB,EAA+B;AAC7B,QAAIC,SAAS,CAAC,CAACT,SAAS,IAAT,GAAgBA,KAAhB,GAAwB,EAAzB,IAA+BQ,MAAhC,EAAwCb,KAAxC,CAA8CC,OAA9C,CAAb;AACAI,YAAQS,OAAOC,GAAP,EAAR;;AAEA,QAAIT,aAAaD,MAAMW,MAAN,GAAeV,SAAhC,EACEE,OAAOD,IAAP,CAAY,OAAZ,EAAqB,IAAIU,KAAJ,CAAU,wBAAV,CAArB;;AAEF,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,OAAOE,MAA3B,EAAmCE,GAAnC,EAAwC;AACtC,UAAIT,QAAQK,OAAOI,CAAP,CAAZ;AACAX,WAAKC,MAAL,EAAaC,KAAb;AACD;AACF;;AAED,SAAOf,QAAQ,UAAUyB,CAAV,EAAa;AAC1BP,SAAK,IAAL,EAAWR,QAAQgB,KAAR,CAAcD,CAAd,CAAX;AACD,GAFM,EAGP,YAAY;AACV,QAAGf,QAAQiB,GAAX,EACET,KAAK,IAAL,EAAWR,QAAQiB,GAAR,EAAX;AACF,QAAGhB,SAAS,IAAZ,EACEE,KAAK,IAAL,EAAWF,KAAX;AACF,SAAKM,KAAL,CAAW,IAAX;AACD,GATM,CAAP;AAUD","file":"index.js","sourcesContent":["//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper, options) {\n  var decoder = new Decoder()\n  var soFar = ''\n  var maxLength = options && options.maxLength;\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) {\n    var pieces = ((soFar != null ? soFar : '') + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    if (maxLength && soFar.length > maxLength)\n      stream.emit('error', new Error('maximum buffer reached'))\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end)\n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n"]}