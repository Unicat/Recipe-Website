{"version":3,"sources":["../../../../node_modules/split/test/partitioned_unicode.js"],"names":["it","require","style","split","exports","test","s","caughtError","rows","on","err","row","push","x","unicodeData","Buffer","piece1","slice","piece2","length","write","end","equal","deepEqual","done"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,OAAR,EAAiBC,KAAjB,CAAuB,QAAvB,CAAT;AAAA,IACIC,QAAQF,QAAQ,IAAR,CADZ;;AAGAG,QAAS,+CAAT,IAA4D,UAAUC,IAAV,EAAgB;AAC1E,MAAIC,IAAIH,MAAM,IAAN,CAAR;AAAA,MACII,cAAc,KADlB;AAAA,MAEIC,OAAO,EAFX;;AAIAF,IAAEG,EAAF,CAAK,OAAL,EAAc,UAAUC,GAAV,EAAe;AAC3BH,kBAAc,IAAd;AACD,GAFD;;AAIAD,IAAEG,EAAF,CAAK,MAAL,EAAa,UAAUE,GAAV,EAAe;AAAEH,SAAKI,IAAL,CAAUD,GAAV;AAAgB,GAA9C;;AAEA,MAAIE,IAAI,kBAAR;AACAC,gBAAc,IAAIC,MAAJ,CAAWF,CAAX,CAAd;;AAEA;AACAG,WAASF,YAAYG,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAT;AACAC,WAASJ,YAAYG,KAAZ,CAAkB,EAAlB,EAAsBH,YAAYK,MAAlC,CAAT;;AAEAb,IAAEc,KAAF,CAAQJ,MAAR;AACAV,IAAEc,KAAF,CAAQF,MAAR;;AAEAZ,IAAEe,GAAF;;AAEArB,KAAGO,WAAH,EAAgBe,KAAhB,CAAsB,KAAtB;;AAEAtB,KAAGQ,IAAH,EAASe,SAAT,CAAmB,CAAC,YAAD,EAAe,OAAf,CAAnB;;AAEAvB,KAAGQ,IAAH,EAASe,SAAT,CAAmBV,EAAEV,KAAF,CAAQ,GAAR,CAAnB;;AAEAE,OAAKmB,IAAL;AACD,CA9BD","file":"partitioned_unicode.js","sourcesContent":["var it = require('it-is').style('colour')\n  , split = require('..')\n\nexports ['split data with partitioned unicode character'] = function (test) {\n  var s = split(/,/g)\n    , caughtError = false\n    , rows = []\n\n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  var x = 'テスト試験今日とても,よい天気で'\n  unicodeData = new Buffer(x);\n\n  // partition of 日\n  piece1 = unicodeData.slice(0, 20);\n  piece2 = unicodeData.slice(20, unicodeData.length);\n\n  s.write(piece1);\n  s.write(piece2);\n\n  s.end()\n\n  it(caughtError).equal(false)\n\n  it(rows).deepEqual(['テスト試験今日とても', 'よい天気で']);\n\n  it(rows).deepEqual(x.split(','))\n\n  test.done()\n}\n"]}