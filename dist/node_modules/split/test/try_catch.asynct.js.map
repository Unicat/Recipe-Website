{"version":3,"sources":["../../../../node_modules/split/test/try_catch.asynct.js"],"names":["it","require","style","split","exports","test","s","JSON","parse","caughtError","rows","on","err","row","push","write","equal","deepEqual","a","b","end","done"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,OAAR,EAAiBC,KAAjB,CAAuB,QAAvB,CAAT;AAAA,IACIC,QAAQF,QAAQ,IAAR,CADZ;;AAGAG,QAAS,wCAAT,IAAqD,UAAUC,IAAV,EAAgB;AACnE,MAAIC,IAAIH,MAAMI,KAAKC,KAAX,CAAR;AAAA,MACIC,cAAc,KADlB;AAAA,MAEIC,OAAO,EAFX;;AAIAJ,IAAEK,EAAF,CAAK,OAAL,EAAc,UAAUC,GAAV,EAAe;AAC3BH,kBAAc,IAAd;AACD,GAFD;;AAIAH,IAAEK,EAAF,CAAK,MAAL,EAAa,UAAUE,GAAV,EAAe;AAAEH,SAAKI,IAAL,CAAUD,GAAV;AAAgB,GAA9C;;AAEAP,IAAES,KAAF,CAAQ,aAAR;AACAf,KAAGS,WAAH,EAAgBO,KAAhB,CAAsB,KAAtB;AACAhB,KAAGU,IAAH,EAASO,SAAT,CAAmB,CAAE,EAAEC,GAAG,CAAL,EAAF,CAAnB;;AAEAZ,IAAES,KAAF,CAAQ,iBAAR;AACAf,KAAGS,WAAH,EAAgBO,KAAhB,CAAsB,IAAtB;AACAhB,KAAGU,IAAH,EAASO,SAAT,CAAmB,CAAE,EAAEC,GAAG,CAAL,EAAF,EAAY,EAAEC,GAAG,CAAL,EAAZ,CAAnB;;AAEAb,IAAEc,GAAF;AACAf,OAAKgB,IAAL;AACD,CArBD;;AAuBAjB,QAAS,wCAAT,IAAqD,UAAUC,IAAV,EAAgB;AACnE,MAAIC,IAAIH,MAAMI,KAAKC,KAAX,CAAR;AAAA,MACIC,cAAc,KADlB;AAAA,MAEIC,OAAO,EAFX;;AAIAJ,IAAEK,EAAF,CAAK,OAAL,EAAc,UAAUC,GAAV,EAAe;AAC3BH,kBAAc,IAAd;AACD,GAFD;;AAIAH,IAAEK,EAAF,CAAK,MAAL,EAAa,UAAUE,GAAV,EAAe;AAAEH,SAAKI,IAAL,CAAUD,GAAV;AAAgB,GAA9C;;AAEAP,IAAES,KAAF,CAAQ,aAAR;AACAf,KAAGS,WAAH,EAAgBO,KAAhB,CAAsB,KAAtB;AACAhB,KAAGU,IAAH,EAASO,SAAT,CAAmB,CAAE,EAAEC,GAAG,CAAL,EAAF,CAAnB;;AAEAZ,IAAES,KAAF,CAAQ,eAAR;AACAf,KAAGS,WAAH,EAAgBO,KAAhB,CAAsB,KAAtB;AACAhB,KAAGU,IAAH,EAASO,SAAT,CAAmB,CAAE,EAAEC,GAAG,CAAL,EAAF,EAAY,EAAEC,GAAG,CAAL,EAAZ,CAAnB;;AAEAb,IAAEc,GAAF;AACApB,KAAGS,WAAH,EAAgBO,KAAhB,CAAsB,IAAtB;AACAhB,KAAGU,IAAH,EAASO,SAAT,CAAmB,CAAE,EAAEC,GAAG,CAAL,EAAF,EAAY,EAAEC,GAAG,CAAL,EAAZ,CAAnB;;AAEAd,OAAKgB,IAAL;AACD,CAxBD","file":"try_catch.asynct.js","sourcesContent":["var it = require('it-is').style('colour')\n  , split = require('..')\n\nexports ['emit mapper exceptions as error events'] = function (test) {\n  var s = split(JSON.parse)\n    , caughtError = false\n    , rows = []\n \n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  s.write('{\"a\":1}\\n{\"')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 } ])\n\n  s.write('b\":2}\\n{\"c\":}\\n')\n  it(caughtError).equal(true)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  s.end()\n  test.done()\n}\n\nexports ['mapper error events on trailing chunks'] = function (test) {\n  var s = split(JSON.parse)\n    , caughtError = false\n    , rows = []\n \n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  s.write('{\"a\":1}\\n{\"')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 } ])\n\n  s.write('b\":2}\\n{\"c\":}')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  s.end()\n  it(caughtError).equal(true)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  test.done()\n}\n"]}